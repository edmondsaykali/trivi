

* Players: 2
* Goal: Be the first to win 5 rounds.
* Time Limit: Each player gets 15 seconds per question. The timer is enforced authoritatively on the server via a question_deadline timestamp in the database.

Round Mechanics


Question 1: Multiple-Choice

* Both players receive the same question simultaneously, pushed via Supabase Realtime.
* Each player selects one of four options within the 15-second server deadline.
* Resolution
    * One correct, one wrong: The player with the correct answer wins the round. Their score is incremented in the database.
    * Both correct or both wrong: The game state is updated to move to Question 2 of the round.

Question 2: Integer Input

When a question requiring a whole number (integer) answer is pushed to both players, the winner is determined by the following rules, processed in order of priority:
    1. One Correct Answer: If one player submits the exact correct integer and the other does not, the player with the correct answer wins the round.
    2. Both Answers Correct: If both players submit the exact correct integer, the winner is the player who submitted their answer first, based on the server's timestamp.
    3. Both Answers Wrong: If neither player submits the correct integer, the winner is decided by proximity:
        * The absolute difference (distance) between each player's guess and the correct answer is calculated (e.g., if the answer is 50 and a player guesses 45, the difference is 5).
        * The player whose answer is closer to the correct number wins the round.
        * Tie-Breaker: If both players' answers are the exact same distance from the correct number (e.g., player A guesses 45 and player B guesses 55 when the answer is 50), the winner is the player who submitted their answer first.
A player's failure to submit an answer before the deadline is automatically considered a wrong answer and will lose to any player who submitted an answer (correct or incorrect).


Winning the Game

* The game continues until a player's score reaches 5. The game-ticker function checks for a winner after each round is processed.
* When a winner is determined, the game's status in the database is set to finished, and the game_winner_id is recorded.
* The client receives this final state update and displays a results page, summarizing the final score and round-by-round outcomes.